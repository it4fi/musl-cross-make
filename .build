#!/bin/bash
set -e

target=$1
gccver=$2
extra_config="$3"

if [[ -z "$gccver" ]]; then
    printf 'Usage: %s <target> <gcc-version>\n' "$0"
    exit 1
fi

versions__binutils=2.30
versions__gcc=$gccver
versions__musl=1.1.19
versions__gmp=6.1.2
versions__mpc=1.1.0
versions__mpfr=4.0.1
versions__isl=0.19
versions__linux=4.4.10

if command -v nproc 1>/dev/null 2>&1 ; then
    J=$(nproc)
else
    J=$(sysctl -n hw.ncpu 2>/dev/null)
fi

if [ -z "${J}" ] ; then
    J=1
fi

if command -v sha1sum 1>/dev/null 2>&1 ; then
    SHASUM=sha1sum
elif command -v shasum 1>/dev/null 2>&1 ; then
    SHASUM="shasum -a 1"
else
    printf 'Unable to find suitable shasum, bailing\n'
    exit 1
fi

printf 'TARGET = %s\n' "$target" > config.mak

printf 'COMMON_CONFIG += --disable-nls\n' >> config.mak
printf 'COMMON_CONFIG += CFLAGS="-g0 -Os" CXXFLAGS="-g0 -Os" LDFLAGS="-s"\n' >> config.mak
printf 'GCC_CONFIG += --enable-languages=c,c++\n' >> config.mak
printf 'GCC_CONFIG += --disable-libquadmath --disable-decimal-float\n' >> config.mak
printf 'GCC_CONFIG += --disable-multilib\n' >> config.mak

printf 'BINUTILS_VER = %s\n' "${versions__binutils}" >> config.mak
printf 'GCC_VER = %s\n' "${versions__gcc}" >> config.mak
printf 'MUSL_VER = %s\n' "${versions__musl}" >> config.mak
printf 'GMP_VER = %s\n' "${versions__gmp}" >> config.mak
printf 'MPC_VER = %s\n' "${versions__mpc}" >> config.mak
printf 'MPFR_VER = %s\n' "${versions__mpfr}" >> config.mak
printf 'ISL_VER = %s\n' "${versions__isl}" >> config.mak
printf 'LINUX_VER = %s\n' "${versions__linux}" >> config.mak
printf 'SHASUM = %s\n' "${SHASUM}" >> config.mak

if [[ -n "$extra_config" ]] ; then
    printf '%s\n' "${extra_config}" >> config.mak
fi

mkdir -p log
mkdir -p dist
mkdir -p output

make -j${J}
make install
make clean

tar -cJf "dist/gcc-${versions__gcc}-${target}.tar.xz" \
  --owner 0 \
  --group 0 \
 -C output .

rm -rf output

rm -f dist/gcc-${gccver}-manifest.txt
touch dist/gcc-${gccver}-manifest.txt

printf 'binutils=%s\n' "${versions__binutils}" >> dist/gcc-${gccver}-manifest.txt
printf 'gcc=%s\n' "${versions__gcc}" >> dist/gcc-${gccver}-manifest.txt
printf 'gmp=%s\n' "${versions__gmp}" >> dist/gcc-${gccver}-manifest.txt
printf 'isl=%s\n' "${versions__isl}" >> dist/gcc-${gccver}-manifest.txt
printf 'linux=%s\n' "${versions__linux}" >> dist/gcc-${gccver}-manifest.txt
printf 'musl=%s\n' "${versions__musl}" >> dist/gcc-${gccver}-manifest.txt
printf 'mpc=%s\n' "${versions__mpc}" >> dist/gcc-${gccver}-manifest.txt
printf 'mpfr=%s\n' "${versions__mpfr}" >> dist/gcc-${gccver}-manifest.txt

rm -f dist/release.md
touch dist/release.md
printf 'Built using `musl-%s`, `linux-headers-%s`\n' "${versions__musl}" "${versions__linux}" >> dist/release.md

