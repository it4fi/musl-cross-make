#!/bin/bash
set -e

target=$1
gccver=$2
extra_config="$3"

if [[ -z "$gccver" ]]; then
    printf 'Usage: %s <target> <gcc-version>\n' "$0"
    exit 1
fi

declare -A versions
versions[binutils]=2.28.1
versions[gcc]=$gccver
versions[musl]=1.1.19
versions[gmp]=6.1.2
versions[mpc]=1.0.3
versions[mpfr]=3.1.6
versions[isl]=0.18
versions[linux]=4.4.10

printf 'TARGET = %s\n' "$target" > config.mak

printf 'COMMON_CONFIG += --disable-nls\n' >> config.mak
printf 'COMMON_CONFIG += CFLAGS="-g0 -Os" CXXFLAGS="-g0 -Os" LDFLAGS="-s"\n' >> config.mak
printf 'GCC_CONFIG += --enable-languages=c,c++\n' >> config.mak
printf 'GCC_CONFIG += --disable-libquadmath --disable-decimal-float\n' >> config.mak
printf 'GCC_CONFIG += --disable-multilib\n' >> config.mak

printf 'BINUTILS_VER = %s\n' "${versions[binutils]}" >> config.mak
printf 'GCC_VER = %s\n' "${versions[gcc]}" >> config.mak
printf 'MUSL_VER = %s\n' "${versions[musl]}" >> config.mak
printf 'GMP_VER = %s\n' "${versions[gmp]}" >> config.mak
printf 'MPC_VER = %s\n' "${versions[mpc]}" >> config.mak
printf 'MPFR_VER = %s\n' "${versions[mpfr]}" >> config.mak
printf 'ISL_VER = %s\n' "${versions[isl]}" >> config.mak
printf 'LINUX_VER = %s\n' "${versions[linux]}" >> config.mak

if [[ -n "$extra_config" ]] ; then
    printf '%s\n' "${extra_config}" >> config.mak
fi

mkdir -p log
mkdir -p dist
mkdir -p output

make -j$(nproc)
make install
make clean

tar -cJf "dist/gcc-${versions[gcc]}-${target}.tar.xz" \
  --owner 0 \
  --group 0 \
 -C output .

rm -rf output

rm -f dist/gcc-${gccver}-manifest.txt
touch dist/gcc-${gccver}-manifest.txt
for i in "${!versions[@]}"; do
    printf '%s=%s\n' "${i}" "${versions[$i]}" >> dist/gcc-${gccver}-manifest.txt
done

rm -f dist/release.md
touch dist/release.md
printf 'Built using `musl-%s`, `linux-headers-%s`\n' "${versions[musl]}" "${versions[linux]}" >> dist/release.md

